[{"title":"Introduction","type":0,"sectionRef":"#","url":"/rbx-fetch/docs/intro","content":"","keywords":""},{"title":"Examples​","type":1,"pageTitle":"Introduction","url":"/rbx-fetch/docs/intro#examples","content":""},{"title":"Fetching a JSON response​","type":1,"pageTitle":"Introduction","url":"/rbx-fetch/docs/intro#fetching-a-json-response","content":"fetch(&quot;https://dummyjson.com/products/1&quot;) :andThen(function(response: fetch.Response) print(response.json()) end) :catch(function(response: fetch.Response) warn(&quot;Failed to fetch data&quot;) warn(response.json()) end)  "},{"title":"Fetching a PNG data response​","type":1,"pageTitle":"Introduction","url":"/rbx-fetch/docs/intro#fetching-a-png-data-response","content":"fetch(&quot;https://rojo.space/img/logo.png&quot;) :andThen(function(response: fetch.Response) response.image():andThen(function(image: fetch.PNG) print(image.Width, image.Height) end) end) :catch(function(response: fetch.Response) warn(&quot;Failed to fetch data&quot;) end)  "},{"title":"Response","type":0,"sectionRef":"#","url":"/rbx-fetch/api/Response","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#properties","content":" "},{"title":"success​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#success","content":"&lt;/&gt; Response.success: boolean   "},{"title":"statusCode​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#statusCode","content":"&lt;/&gt; Response.statusCode: number   "},{"title":"statusMessage​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#statusMessage","content":"&lt;/&gt; Response.statusMessage: string   "},{"title":"headers​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#headers","content":"&lt;/&gt; Response.headers: {[string]: string}  "},{"title":"Functions​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#functions","content":" "},{"title":"text​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#text","content":"&lt;/&gt; Response.text(input: any) → Promise.TypedPromise&lt;string&gt;   "},{"title":"json​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#json","content":"&lt;/&gt; Response.json(input: any) → Promise.TypedPromise&lt;any&gt;   "},{"title":"image​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#image","content":"&lt;/&gt; Response.image(input: any) → Promise.TypedPromise&lt;PNG&gt; "},{"title":"Types","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response##","content":""},{"title":"​","type":1,"pageTitle":"Response","url":"/rbx-fetch/api/Response#PNG","content":"interface PNG { GetPixel: ( x: number, y: number ) → Color3 Width: number Height: number BitDepth: number ColorType: number }   "},{"title":"Installation","type":0,"sectionRef":"#","url":"/rbx-fetch/docs/installation","content":"","keywords":""},{"title":"Wally​","type":1,"pageTitle":"Installation","url":"/rbx-fetch/docs/installation#wally","content":"Put fetch inside your Wally dependencies, as so: fetch = &quot;synpixel/fetch@0.2.0&quot;  "},{"title":"fetch","type":0,"sectionRef":"#","url":"/rbx-fetch/api/fetch","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#types","content":" "},{"title":"HttpMethod​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#HttpMethod","content":"&lt;/&gt; type HttpMethod = &quot;GET&quot; | &quot;HEAD&quot; | &quot;POST&quot; | &quot;PUT&quot; | &quot;DELETE&quot; | &quot;CONNECT&quot; | &quot;OPTIONS&quot; | &quot;TRACE&quot; | &quot;PATCH&quot;  "},{"title":"Functions​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#functions","content":" "},{"title":"fetch()​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#__call","content":"&lt;/&gt; fetch( resource: string, options?: Options ) → Promise&lt;Response&gt; "},{"title":"Types","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch##","content":""},{"title":"​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#Options","content":"interface Options { method: HttpMethod headers?: {[string]: string} body?: string }   "}]