[{"title":"Installation","type":0,"sectionRef":"#","url":"/rbx-fetch/docs/installation","content":"","keywords":""},{"title":"Wally​","type":1,"pageTitle":"Installation","url":"/rbx-fetch/docs/installation#wally","content":"Put fetch inside your Wally dependencies, as so: fetch = &quot;synpixel/fetch@0.1.1&quot;  "},{"title":"Introduction","type":0,"sectionRef":"#","url":"/rbx-fetch/docs/intro","content":"","keywords":""},{"title":"Example​","type":1,"pageTitle":"Introduction","url":"/rbx-fetch/docs/intro#example","content":"fetch(&quot;https://dummyjson.com/products/1&quot;) :andThen(fetch.decodeJSON) :andThen(function(response: fetch.Response) print(response) end) :catch(function() warn(&quot;Failed to fetch data&quot;) end)  "},{"title":"fetch","type":0,"sectionRef":"#","url":"/rbx-fetch/api/fetch","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#types","content":" "},{"title":"HttpMethod​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#HttpMethod","content":"&lt;/&gt; type HttpMethod = &quot;GET&quot; | &quot;HEAD&quot; | &quot;POST&quot; | &quot;PUT&quot; | &quot;DELETE&quot; | &quot;CONNECT&quot; | &quot;OPTIONS&quot; | &quot;TRACE&quot; | &quot;PATCH&quot;   "},{"title":"Response​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#Response","content":"&lt;/&gt; interface Response { success: boolean statusCode: number statusMessage: string headers: {[string]: string} body: any }  "},{"title":"Functions​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#functions","content":" "},{"title":"encodeJSON​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#encodeJSON","content":"&lt;/&gt; fetch.encodeJSON(input: any) → Promise&lt;string&gt;   "},{"title":"decodeJSON​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#decodeJSON","content":"&lt;/&gt; fetch.decodeJSON(input: string | Response) → Promise&lt;any&gt;   "},{"title":"fetch()​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#__call","content":"&lt;/&gt; fetch( resource: string, options?: Options ) → Promise&lt;Response&gt; "},{"title":"Types","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch##","content":""},{"title":"​","type":1,"pageTitle":"fetch","url":"/rbx-fetch/api/fetch#Options","content":"interface Options { method: HttpMethod headers?: {[string]: string} body?: string }   "}]